{"version":3,"sources":["SearchForm.tsx","MovieListCard.tsx","MovieList.tsx","PopUp.tsx","API.ts","App.tsx","index.tsx"],"names":["SearchFormCon","styled","form","InputField","input","SelectField","select","SubmitButton","button","SearchForm","submit","useState","newSearch","setNewSearch","newMediaType","setNewMediaType","action","onSubmit","e","preventDefault","search","mediaType","type","placeholder","value","onChange","target","MovieListTile","li","Poster","img","MovieTitle","div","MovieListCard","movie","onClick","imdbID","src","alt","Title","MoviesList","MovieList","movies","sendSelectedID","map","item","key","id","PopUpContainer","PopUpWindow","PopUpBackButton","PopUpTitle","PopUpYear","PopUpPlot","PopUpPoster","PopUp","selected","backClick","Released","Plot","getMovies","page","axios","get","then","response","data","getSelected","MainContainer","body","ResultsFound","NavButtons","NavButton","PageNumber","initialDetailedState","Runtime","imdbRating","initialState","result","undefined","selectedMovie","reducer","state","event","payload","movieResPayload","pagePayload","selMovieResPayload","App","useReducer","update","React","selectedID","updateSelectedID","popUpState","updatePopUpState","setMediaType","useEffect","a","Promise","all","movieResponse","selMovieResponse","console","log","callToAPIs","click","totalResults","Search","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8c77040.chunk.js","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport styled from \"styled-components\";\n\nconst SearchFormCon = styled.form`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst InputField = styled.input`\n  width: 300px;\n  font-size: 25px;\n  padding: 10px 20px;\n  margin: 5px 10px;\n  background: none;\n  border-bottom: 2px solid white;\n  border-left: none;\n  border-right: none;\n  border-top: none;\n  color: white;\n  :focus {\n    outline-width: 0;\n  }\n`;\n\nconst SelectField = styled.select`\n  width: 150px;\n  font-size: 25px;\n  padding: 10px 20px;\n  margin: 5px 10px;\n  background: none;\n  border-bottom: 2px solid white;\n  border-left: none;\n  border-right: none;\n  border-top: none;\n  color: white;\n  :focus {\n    outline-width: 0;\n  }\n`;\n\nconst SubmitButton = styled.button`\n  font-size: 25px;\n  padding: 10px 20px;\n  margin: 5px 10px;\n  border: 2px solid white;\n  border-radius: 10px;\n  background: none;\n  color: white;\n  transition: 0.2s;\n  :hover {\n    background: white;\n    color: rgb(66, 76, 84);\n  }\n`;\n\ntype SearchProps = {\n  search: string;\n  mediaType: string;\n};\n\nexport const SearchForm = ({\n  submit,\n}: {\n  submit: (fullSearch: SearchProps) => void;\n}) => {\n  const [newSearch, setNewSearch] = useState(\"\");\n  const [newMediaType, setNewMediaType] = useState(\"movie\");\n\n  return (\n    <SearchFormCon\n      action=\"submit\"\n      onSubmit={(e) => {\n        e.preventDefault();\n        if (newSearch !== null) {\n          submit({ search: newSearch, mediaType: newMediaType });\n          setNewSearch(\"\");\n        }\n      }}\n    >\n      <InputField\n        type=\"text\"\n        placeholder=\"search...\"\n        value={newSearch}\n        onChange={(e) => setNewSearch(e.target.value)}\n      />\n      <SelectField onChange={(e) => setNewMediaType(e.target.value)}>\n        <option value=\"film\">Film</option>\n        <option value=\"series\">Series</option>\n      </SelectField>\n      <SubmitButton type=\"submit\">Search</SubmitButton>\n    </SearchFormCon>\n  );\n};\n","import React from \"react\";\nimport { Movie } from \"./App\";\nimport styled from \"styled-components\";\n\nconst MovieListTile = styled.li`\n  list-style: none;\n  flex: 0 0 18%;\n  height: 325px;\n  width: 225px;\n  margin: 20px 20px;\n  padding: 20px 20px;\n  background: white;\n  border-radius: 8px;\n`;\n\nconst Poster = styled.img`\n  opacity: 1;\n  height: 300px;\n  width: 200px;\n  transition: 0.5s ease;\n  backface-visibility: hidden;\n  :hover {\n    opacity: 0.7;\n  }\n`;\n\nconst MovieTitle = styled.div`\n  font-size: 12px;\n`;\n\nexport const MovieListCard = ({\n  movie,\n  onClick,\n}: {\n  movie: Movie;\n  onClick: (id: string) => void;\n}) => {\n  return (\n    <MovieListTile onClick={() => onClick(movie.imdbID)}>\n      <Poster src={movie.Poster} alt=\"#\" />\n      <MovieTitle>{movie.Title}</MovieTitle>\n    </MovieListTile>\n  );\n};\n","import React from \"react\";\nimport { Movie } from \"./App\";\nimport { MovieListCard } from \"./MovieListCard\";\nimport styled from \"styled-components\";\n\nconst MoviesList = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  background: rgb(34, 41, 46);\n`;\n\nexport const MovieList = ({\n  movies,\n  sendSelectedID,\n}: {\n  movies: Movie[];\n  sendSelectedID: (id: string) => void;\n}) => {\n  return (\n    <MoviesList>\n      {movies.map((item) => {\n        return (\n          <MovieListCard\n            key={item.imdbID}\n            movie={item}\n            onClick={(id: string) => sendSelectedID(id)}\n          />\n        );\n      })}\n    </MoviesList>\n  );\n};\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { DetailedMovie } from \"./App\";\n\nconst PopUpContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-family: \"Verdana\";\n  background: rgb(34, 41, 46);\n  height: 100%;\n  width: 50%;\n`;\n\nconst PopUpWindow = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  background: white;\n  color: rgb(66, 76, 84);\n  padding: 20px;\n  border-radius: 25px;\n  width: 60%;\n`;\n\nconst PopUpBackButton = styled.button`\n  font-size: 25px;\n  padding: 10px 20px;\n  margin: 5px 10px;\n  border: 2px solid white;\n  border-radius: 10px;\n  background: none;\n  color: white;\n  transition: 0.2s;\n  :hover {\n    background: white;\n    color: rgb(66, 76, 84);\n  }\n`;\n\nconst PopUpTitle = styled.div`\n  padding: 10px;\n  color: rgb(66, 76, 84);\n  font-size: 35px;\n`;\n\nconst PopUpYear = styled.div`\n  padding: 10px;\n  color: rgb(66, 76, 84);\n  font-size: 15px;\n`;\n\nconst PopUpPlot = styled.div`\n  padding: 10px;\n  color: rgb(66, 76, 84);\n  font-size: 15px;\n`;\n\nconst PopUpPoster = styled.img`\n  padding: 10px;\n  height: 450px;\n  width: 300;\n`;\n\nexport const PopUp = ({\n  selected,\n  backClick,\n}: {\n  selected: DetailedMovie | undefined;\n  backClick: (popUpState: boolean) => void;\n}) => {\n  if (!selected) return null;\n  return (\n    <PopUpContainer>\n      <PopUpWindow>\n        <PopUpTitle>{selected.Title}</PopUpTitle>\n        <PopUpYear>{selected.Released}</PopUpYear>\n        <PopUpPlot>{selected.Plot}</PopUpPlot>\n        <PopUpPoster src={selected.Poster} alt=\"\"></PopUpPoster>\n      </PopUpWindow>\n      <PopUpBackButton onClick={() => backClick(false)}>Back</PopUpBackButton>\n    </PopUpContainer>\n  );\n};\n","import axios from \"axios\";\nimport { MovieResponse, DetailedMovie } from \"./App\";\n\nexport const getMovies = (search: string, page: number, type: string) => {\n  return axios\n    .get<MovieResponse>(\n      `https://www.omdbapi.com/?apikey=13d6c617&s=${search}&page=${page}&type=${type}`\n    )\n    .then((response) => {\n      return response.data;\n    });\n};\n\nexport const getSelected = (id: string | undefined) => {\n  return axios\n    .get<DetailedMovie>(`https://www.omdbapi.com/?apikey=13d6c617&i=${id}`)\n    .then((response) => {\n      return response.data;\n    });\n};\n","import React, { useReducer } from \"react\";\nimport styled from \"styled-components\";\nimport { useEffect } from \"react\";\nimport { SearchForm } from \"./SearchForm\";\nimport { MovieList } from \"./MovieList\";\nimport { PopUp } from \"./PopUp\";\nimport { getMovies, getSelected } from \"./API\";\n// import { PageButtons } from \"./PageButtons\";\n\nconst MainContainer = styled.body`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-family: \"Verdana\";\n  background: rgb(34, 41, 46);\n  height: 100%;\n  width: 100%;\n  margin: 0px;\n`;\n\nconst Title = styled.div`\n  color: white;\n  text-align: center;\n  font-size: 50px;\n  padding: 20px;\n`;\n\nconst ResultsFound = styled.div`\n  color: white;\n  text-align: center;\n`;\n\nconst NavButtons = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n`;\n\nconst NavButton = styled.button`\n  font-size: 25px;\n  padding: 10px 20px;\n  margin: 5px 10px;\n  border: 2px solid white;\n  border-radius: 10px;\n  background: none;\n  color: white;\n  transition: 0.2s;\n  :hover {\n    background: white;\n    color: rgb(66, 76, 84);\n  }\n`;\n\nconst PageNumber = styled.div`\n  color: white;\n`;\n\nexport type MovieResponse = {\n  Search: Movie[];\n  Response: string;\n  totalResults: string;\n};\n\nexport type Movie = {\n  Title: string;\n  Year: string;\n  imdbID: string;\n  Type: string;\n  Poster: string;\n};\n\nexport type DetailedMovie = {\n  Title: string;\n  Plot: string;\n  Released: string;\n  Runtime: string;\n  imdbID: string;\n  imdbRating: string;\n  Poster: string;\n};\n\nexport type AppState = {\n  search: string;\n  result: MovieResponse | undefined;\n  page: number;\n  selectedMovie: DetailedMovie | undefined;\n};\nconst initialDetailedState: DetailedMovie = {\n  Title: \"\",\n  Plot: \"\",\n  Released: \"\",\n  Runtime: \"\",\n  imdbID: \"\",\n  imdbRating: \"\",\n  Poster: \"\",\n};\n\nconst initialState: AppState = {\n  search: \"Lord of the Rings\",\n  result: undefined,\n  page: 1,\n  selectedMovie: undefined,\n};\n\nexport type AppEvents =\n  | {\n      type: \"search set\";\n      payload: { search: string };\n    }\n  | {\n      type: \"movie response set\";\n      movieResPayload: MovieResponse;\n    }\n  | {\n      type: \"page number changed\";\n      pagePayload: { page: number };\n    }\n  | {\n      type: \"select movie response set\";\n      selMovieResPayload: DetailedMovie | undefined;\n    };\n\nexport const reducer: React.Reducer<AppState, AppEvents> = (state, event) => {\n  switch (event?.type) {\n    case \"search set\": {\n      return {\n        ...state,\n        search: event.payload.search,\n      };\n    }\n    case \"movie response set\": {\n      return { ...state, result: event.movieResPayload };\n    }\n    case \"page number changed\": {\n      return {\n        ...state,\n        page: event.pagePayload.page,\n      };\n    }\n    case \"select movie response set\": {\n      return {\n        ...state,\n        selectedMovie: event.selMovieResPayload,\n      };\n    }\n  }\n};\n\nfunction App() {\n  const [state, update] = useReducer(reducer, initialState);\n  const [selectedID, updateSelectedID] = React.useState(\"\");\n  const [popUpState, updatePopUpState] = React.useState(false);\n  const [mediaType, setMediaType] = React.useState(\"movie\");\n\n  useEffect(() => {\n    async function callToAPIs() {\n      try {\n        const [movieResponse, selMovieResponse] = await Promise.all([\n          getMovies(state.search, state.page, mediaType),\n          getSelected(selectedID),\n        ]);\n        update({ type: \"movie response set\", movieResPayload: movieResponse });\n        update({\n          type: \"select movie response set\",\n          selMovieResPayload: selMovieResponse,\n        });\n        console.log(selMovieResponse);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    if (state.search !== null) {\n      callToAPIs();\n    }\n  }, [state.search, state.page, selectedID, mediaType]);\n\n  if (!state.result) return null;\n\n  return (\n    <MainContainer>\n      <Title>Movie Database</Title>\n      {popUpState ? (\n        <PopUp\n          selected={state.selectedMovie}\n          backClick={(click) => {\n            updatePopUpState(click);\n            update({\n              type: \"select movie response set\",\n              selMovieResPayload: initialDetailedState,\n            });\n          }}\n        />\n      ) : (\n        <div>\n          <SearchForm\n            submit={({ search, mediaType }) => {\n              update({ type: \"search set\", payload: { search } });\n              update({ type: \"page number changed\", pagePayload: { page: 1 } });\n              setMediaType(mediaType);\n            }}\n          />\n\n          <ResultsFound>\n            {state.result.totalResults} results for \"{state.search}\"\n          </ResultsFound>\n          <MovieList\n            movies={state.result.Search}\n            sendSelectedID={(id) => {\n              updateSelectedID(id);\n              updatePopUpState(true);\n            }}\n          />\n\n          <NavButtons>\n            {state.page === 1 ? null : (\n              <NavButton\n                onClick={() => {\n                  update({\n                    type: \"page number changed\",\n                    pagePayload: { page: state.page - 1 },\n                  });\n                }}\n              >\n                Prev\n              </NavButton>\n            )}\n\n            <NavButton\n              onClick={() => {\n                update({\n                  type: \"page number changed\",\n                  pagePayload: { page: state.page + 1 },\n                });\n              }}\n            >\n              Next\n            </NavButton>\n            <PageNumber> page {state.page}</PageNumber>\n          </NavButtons>\n        </div>\n      )}\n    </MainContainer>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}